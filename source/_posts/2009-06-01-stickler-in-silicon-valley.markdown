---
layout: post
---
I have not been actively looking for a job yet. Nevertheless, I was contacted by a startup and invited to spend a week in Silicon Valley / San Francisco, hacking around with them to see if I could become part of their team, which I found quite flattering. I learned lots of new things in California. A couple of new words too. I'm still unsure as to what exactly a hipster is, but "stickler" was easier to grasp: one who insists on exactness or completeness in the observance of something.

It was fascinating to witness the startup culture. Tens of thousand of users is considered a small test bed; the target is millions. Every newcomer on the web scene is analysed & probed. There was technology and technology talk everywhere. It seems like everyone in the Bay Area has an iPhone. And I mean everyone! Lacking a decent map of the city, I asked two random strangers for directions and both dug out their iPhone to help me out. When I needed to call someone I was meeting, I asked another stranger if I could use his phone. It was an iPhone, of course, and after a thorough examination to estimate the chances I'd run away with it, he graciously let me use it. I found people particularily nice too, although maybe my tourist status helped, I don't know.

My timing for the trip was great because Brian Ford and Evan Phoenix were also in town and invited me to have a drink. It turns out the monthly SF Ruby meetup was on that very same day, I met them there. I'd say the crowd was about three times that of a typicial Montreal.rb meet. There were other noticeable differences too. Many people were part of pretty exciting projects and companies (EngineYard, GitHub, PeepCode and the like). Chris Wanstrath (of GitHub) presented his newest gem rip, while Mike Dirolf was presenting his mongoDB project.  Three people stood up announcing they were looking for developers, which has yet to happen in Montreal... I guess recession doesn't have the same meaning in the Valley.

Back to Palo Alto and the startup. I realized a couple of things there. I really enjoy thinking about what a product could look like, how it should be presented to users. Finding ways to improve it by analysing its use is something I've never had the chance to do and is quite appealing. On the other hand, I somehow assumed that the "Joel" approach would be a sine qua non for an ambitious startup: hire the best, only the best, give them the best tools and let them loose.

It turns out that when considering what a good programmer is, different qualities can be given different weights. Most will agree that getting things done is the main one. Without it, not much can save you. As a reflection of my values though, I expected that embracing standards, learning the available tools and applying principles like DRY, refactoring, etc..., was also part of it. That's apparently not the case, and that's why we all realized I wouldn't mesh as nicely as we hoped in their startup.

I couldn't help but notice that all the rails programmers are Windows guys. Except one; he is a Linux guy and although I didn't have the chance to really work with him, he gave me a really good impression. I'm ready to bet his values are more aligned with mine. The HTML/css/design expert was the only Mac guy and I could not have agreed more on what his opinions and point of view. So is there a Windows/Mac divide? Something like "Get things done" vs "Design it well so it just works"?

Nah. Things are never that simple, as I was reminded when taking part in the interview of a mac guy that clearly didn't care for DRY or nice tools like named scopes, besides otherwise decent technical skills. So no, I just have the face the fact that, for better or for worse, I'm a stickler for getting things done well.

<i>Update:</I>My friend Pascal suggested this be related to an Engineer/Scientist divide: using tools vs understanding them; making things work vs comprehension through abstraction. Interesting idea.

